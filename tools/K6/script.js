// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import { htmlReport } from "https://raw.githubusercontent.com/benc-uk/k6-reporter/main/dist/bundle.js";

export let options = { maxRedirects: 4, duration: '30s', vus: 250 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options
});

export default function() {
  // postman[Request]({
  //   name: "String Literal",
  //   id: "b685b7f1-5b75-4df1-8e4d-b305097e26a8",
  //   method: "GET",
  //   address: "http://localhost:5095/String/ConcatenateByStringLiteral"
  // });

  // postman[Request]({
  //   name: "String Builder",
  //   id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
  //   method: "GET",
  //   address: "http://localhost:5095/String/ConcatenateByStringBuilder"
  // });

  // postman[Request]({
  //   name: "String Builder",
  //   id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
  //   method: "GET",
  //   address: "http://localhost:5095/Serialisation/SerialiseWithNewtonsoft"
  // });

  // postman[Request]({
  //   name: "String Builder",
  //   id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
  //   method: "GET",
  //   address: "http://localhost:5095/Serialisation/SerialiseWithProtobuf"
  // });

  // postman[Request]({
  //   name: "String Builder",
  //   id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
  //   method: "GET",
  //   address: "http://localhost:5095/Iteration/IterateWithForEach"
  // });

  // postman[Request]({
  //   name: "String Builder",
  //   id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
  //   method: "GET",
  //   address: "http://localhost:5095/Iteration/IterateWithSpan"
  // });

  // postman[Request]({
  //   name: "String Builder",
  //   id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
  //   method: "GET",
  //   address: "http://localhost:5095/Mapping/MapManually"
  // });

  postman[Request]({
    name: "String Builder",
    id: "c23df1e6-d096-4b65-b5b7-3d7a2f247ba9",
    method: "GET",
    address: "http://localhost:5095/Mapping/MapWithMapsterCodeGeneration"
  });
}

export function handleSummary(data) {
  return {
    "summary.html": htmlReport(data),
  };
}
